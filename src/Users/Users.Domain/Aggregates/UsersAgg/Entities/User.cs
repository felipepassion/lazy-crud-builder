using LazyCrudBuilder.Core.Application.DTO.Attributes;
using LazyCrudBuilder.Core.Domain.Aggregates.CommonAgg.Entities;
using LazyCrudBuilder.Core.Domain.Attributes.T4;
using LazyCrudBuilder.Users.Enumerations;
using LazyCrudBuilder.Users.Identity;

namespace LazyCrudBuilder.Users.Domain.Aggregates.UsersAgg.Entities
{
    [EndpointsT4(EndpointTypes.HttpAll), MigrationOrder(1), DoNotReplaceAfterGenerated,
        H1("REGISTER USER AND PROFILE ACCESSES"),
        HideTitleOnHeader,
        AutoGenerateDefaultFiles,
        H2("User Registration")]
    [Steppable(1)]
    public class User : SteppableEntity
    {
        public User()
        {
        }

        public string UserName { get; set; }

        [Step(1)]
        [RequiredT4]
        [Title, DisplayOnList(2)]
        public string? Name { get; set; }

        [Step(1)]
        [DisplayOnList(4)]
        public DateOnly? BirthDate { get; set; } = null!;

        [Step(1)]
        [DisplayOnList(5)]
        public GenderEnum Gender { get; set; } = GenderEnum.M;

        public bool? NeedResetPassword { get; set; }

        public bool? NeedSendOnboardingMail { get; set; }

        public string? ProfilePicture { get; set; }

        [Step(1)]
        [OneToOne]
        public virtual UserContact Contact { get; set; } = new UserContact();

        [Step(1)]
        [DisplayOnList(8)]
        public bool? CanUpdatePassword { get; set; } = null;

        [OneToOne, IgnoreValidation, DettachNavigationProperty]
        public UserCurrentAccessSelected SelectedAccess { get; set; }

        [ListingPicker, AttatchOnUpdate]
        public List<UserProfileList> Accesses { get; set; } = new List<UserProfileList>();

        [IgnorePropertyT4]
        public ApplicationUser ApplicationUser { get; set; }
    }
}
